/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import DATOS.chat_datos;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author MXCATTV12
 */
public class MSGServidor extends javax.swing.JInternalFrame  implements Runnable{

    /**
     * Creates new form MSGServidor
     */
    public String usuario;
    public chat_datos datosuser=new chat_datos();
    public String ip;
    public MSGServidor(String usuario) {
        this.usuario=usuario;
        initComponents();
    }

    public void mandarmsg(){
        try {
            Socket sockenvia=new Socket(ip,9998);
            ObjectOutputStream data_salida=new ObjectOutputStream(sockenvia.getOutputStream());
            datosuser.setMsg(txtmsg.getText());
            datosuser.setNick(usuario);
            data_salida.writeObject(datosuser);
            sockenvia.close();
        } catch (IOException ex) {
            Logger.getLogger(MSGServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtchatadmin = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        txtmsg = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);

        txtchatadmin.setEditable(false);
        txtchatadmin.setColumns(20);
        txtchatadmin.setRows(5);
        jScrollPane1.setViewportView(txtchatadmin);

        jButton1.setText("ENVIAR");

        jLabel1.setText("CHAT ADMINISTRADOR");

        jLabel2.setText("-------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmsg)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtmsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton1)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtchatadmin;
    private javax.swing.JTextField txtmsg;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            ServerSocket sockserverrecibe=new ServerSocket(9999);
            while(true){
                Socket sockserver=sockserverrecibe.accept();
                ObjectInputStream datos_recivo=new ObjectInputStream(sockserver.getInputStream());
                chat_datos datareciv;
                datareciv=(chat_datos)datos_recivo.readObject();
                ip=datareciv.getIp();
                txtchatadmin.append("\n"+datareciv.getNick()+" : "+datareciv.getMsg());
                sockserver.close();
            }
            
        } catch (IOException ex) {
            Logger.getLogger(MSGServidor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MSGServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
}
